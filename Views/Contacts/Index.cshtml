@model IEnumerable<ERManager.Models.Contact>

@{
    ViewData["Title"] = "Contacts";
}

<div class="container">
    <h1 class="mt-4">Contacts</h1>

    <div class="row mb-4">
        <div class="col-md-6">
            <input type="text" id="contactSearch" class="form-control" placeholder="Search Contacts..." onkeyup="searchContacts()" />
        </div>
        <div class="col-md-3 offset-md-3 text-end">
            <a asp-action="Create" class="btn btn-primary">Create New</a>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-hover table-bordered">
            <thead class="table-light">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Name)</th>
                    <th>@Html.DisplayNameFor(model => model.Address)</th>
                    <th>@Html.DisplayNameFor(model => model.Phone)</th>
                    <th>@Html.DisplayNameFor(model => model.Email)</th>
                    <th>@Html.DisplayNameFor(model => model.IsActive)</th>
                    <th>@Html.DisplayNameFor(model => model.ContactType)</th>
                    <th>@Html.DisplayNameFor(model => model.CreatedAt)</th>
                    <th>@Html.DisplayNameFor(model => model.UpdateAt)</th>
                    <th>@Html.DisplayNameFor(model => model.User)</th>
                    <th>@Html.DisplayNameFor(model => model.Branch)</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="contactTableBody">
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>@Html.DisplayFor(modelItem => item.Address)</td>
                        <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                        <td>@Html.DisplayFor(modelItem => item.Email)</td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IsActive)
                            
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.ContactType)</td>
                        <td>@Html.DisplayFor(modelItem => item.CreatedAt)</td>
                        <td>@Html.DisplayFor(modelItem => item.UpdateAt)</td>
                        <td>@Html.DisplayFor(modelItem => item.User.Username)</td>
                        <td>@Html.DisplayFor(modelItem => item.Branch.Name)</td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-info">Edit</a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-success">Details</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                            <a asp-action="ToggleActiveStatus" asp-route-id="@item.Id" class="btn btn-sm btn-secondary mt-2">
                                @if (item.IsActive)
                                {
                                    <span>Deactivate</span>
                                }
                                else
                                {
                                    <span>Activate</span>
                                }
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script>
    function searchContacts() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("contactSearch");
        filter = input.value.toLowerCase();
        table = document.getElementById("contactTableBody");
        tr = table.getElementsByTagName("tr");

        for (i = 0; i < tr.length; i++) {
            tdName = tr[i].getElementsByTagName("td")[0];  // Name
            tdEmail = tr[i].getElementsByTagName("td")[3]; // Email

            if (tdName || tdEmail) {
                txtValueName = tdName.textContent || tdName.innerText;
                txtValueEmail = tdEmail.textContent || tdEmail.innerText;

                if (txtValueName.toLowerCase().indexOf(filter) > -1 || txtValueEmail.toLowerCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }
</script>
